/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var N=Object.create;var g=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var u=s=>g(s,"__esModule",{value:!0});var _=(s,e)=>{u(s);for(var t in e)g(s,t,{get:e[t],enumerable:!0})},b=(s,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of I(e))!D.call(s,o)&&o!=="default"&&g(s,o,{get:()=>e[o],enumerable:!(t=B(e,o))||t.enumerable});return s},S=s=>b(u(g(s!=null?N(x(s)):{},"default",s&&s.__esModule&&"default"in s?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s);_(exports,{default:()=>f});var d=S(require("obsidian"));var p=S(require("obsidian"));var v="in the active pane",h=s=>`${s?`Activate ${s} mode`:"Toggle theme"}`;var c;(function(t){t.Light="light",t.Dark="dark"})(c||(c={}));var m="theme-toggle",l=`${m}-button`,y=[null,c.Light,c.Dark],T={id:m,icon:"any-key",name:h()},w={leafSettings:[]};function $(s){return s.includes(":")?s.split(":")[1].trim():s}function E(){return p.Platform.isDesktop?18:24}function C(s){for(let e=s.length;e>=0;e--)s[e]&&s[e].remove()}function A(){let s=[];app.workspace.iterateAllLeaves(e=>{s.push(e.view.containerEl)});for(let e=0;e<s.length;e++){let o=s[e].getElementsByClassName(l);o.length>0&&C(o)}}function k(s,e,t,o,i,n="a"){let a=$(s),L=i.concat([e]),r=createEl(n,{cls:L,attr:{"aria-label-position":"bottom","aria-label":a}});return(0,p.setIcon)(r,t,o),r}var f=class extends d.Plugin{addButtonToViewActions(e,t){let{id:o,icon:i,name:n}=t,a=E(),r=k(n,o,i,a,["view-action","clickable-icon",l]);r.addEventListener("click",()=>{this.toggleTheme()}),e.prepend(r)}addButtonToLeaf(e,t){var n;let o=e==null?void 0:e.view.containerEl,i=o==null?void 0:o.getElementsByClassName("view-actions")[0];!i||((n=i.getElementsByClassName(`view-action ${l} ${t.id}`)[0])==null||n.detach(),this.addButtonToViewActions(i,t))}addButtonToAllLeaves(){app.workspace.iterateAllLeaves(e=>this.addButtonToLeaf(e,T)),app.workspace.onLayoutChange()}setThemeForLeaf(e,t){let o=t==="light"?"dark":"light";e==null||e.classList.remove(`theme-${o}`),e==null||e.classList.add(`theme-${t}`)}setThemeForAllLeaves(){this.settings.leafSettings.length>0&&this.settings.leafSettings.forEach(({id:e,theme:t})=>{var i;let o=(i=this.app.workspace.getLeafById(e))==null?void 0:i.view.containerEl.parentNode;this.setThemeForLeaf(o,t)})}updateSavedLeaf(e,t){let o=this.settings.leafSettings.find(n=>n.id===e.id),i={id:e.id,theme:t};o?this.settings.leafSettings=[...this.settings.leafSettings.filter(n=>n.id!==e.id),i]:this.settings.leafSettings.push(i)}getThemeFromNode(e){let t=Array.from(e==null?void 0:e.classList),o=t==null?void 0:t.filter(n=>n.includes("theme"))[0];return(o==null?void 0:o.includes("dark"))?"dark":"light"}cleanUpClosedLeaves(){let e=this.settings.leafSettings.filter(t=>!this.app.workspace.getLeafById(t.id));if(e.length>0){let t=new Set(e);this.settings.leafSettings=this.settings.leafSettings.filter(o=>!t.has(o)),this.saveSettings()}}toggleTheme(e){let t=this.app.workspace.getMostRecentLeaf(),o=t==null?void 0:t.view.containerEl.parentNode,n=this.getThemeFromNode(o)==="light"?"dark":"light",a=e||n;this.setThemeForLeaf(o,a),this.updateSavedLeaf(t,a),this.saveSettings()}async onload(){console.log(`${this.manifest.name} Plugin loaded.`),y.forEach(e=>{this.addCommand({id:`${m}${e?`-${e}`:""}`,name:`${h(e)} ${v}`,callback:()=>this.toggleTheme(e)})}),await this.loadSettings(),this.app.workspace.onLayoutReady(()=>{this.addButtonToAllLeaves(),this.setThemeForAllLeaves()}),this.registerEvent(this.app.workspace.on("layout-change",()=>{this.cleanUpClosedLeaves();let e=app.workspace.getActiveViewOfType(d.View);!e||this.addButtonToLeaf(e.leaf,T)}))}async onunload(){console.log(`${this.manifest.name} Plugin unloaded.`),A()}async loadSettings(){this.settings=Object.assign({},w,await this.loadData())}async saveSettings(e){await this.saveData(e||this.settings)}};
